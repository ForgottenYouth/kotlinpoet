var pages = [{'name': 'data class ClassData(declarationContainer: ImmutableKmClass, className: ClassName, annotations: Collection<AnnotationSpec>, properties: Map<ImmutableKmProperty, PropertyData>, constructors: Map<ImmutableKmConstructor, ConstructorData>, methods: Map<ImmutableKmFunction, MethodData>) : ContainerData', 'description':'com.squareup.kotlinpoet.metadata.specs.ClassData', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-class-data/index.html', 'searchKey':'ClassData'},
{'name': 'fun ClassData(declarationContainer: ImmutableKmClass, className: ClassName, annotations: Collection<AnnotationSpec>, properties: Map<ImmutableKmProperty, PropertyData>, constructors: Map<ImmutableKmConstructor, ConstructorData>, methods: Map<ImmutableKmFunction, MethodData>)', 'description':'com.squareup.kotlinpoet.metadata.specs.ClassData.ClassData', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-class-data/-class-data.html', 'searchKey':'ClassData'},
{'name': 'operator fun component1(): ImmutableKmClass', 'description':'com.squareup.kotlinpoet.metadata.specs.ClassData.component1', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-class-data/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): ImmutableKmClass?', 'description':'com.squareup.kotlinpoet.metadata.specs.EnumEntryData.component1', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-enum-entry-data/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component1(): ImmutableKmPackage', 'description':'com.squareup.kotlinpoet.metadata.specs.FileData.component1', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-file-data/component1.html', 'searchKey':'component1'},
{'name': 'operator fun component2(): ClassName', 'description':'com.squareup.kotlinpoet.metadata.specs.ClassData.component2', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-class-data/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Map<Int, Collection<AnnotationSpec>>', 'description':'com.squareup.kotlinpoet.metadata.specs.ConstructorData.component2', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-constructor-data/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Collection<AnnotationSpec>', 'description':'com.squareup.kotlinpoet.metadata.specs.EnumEntryData.component2', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-enum-entry-data/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Boolean', 'description':'com.squareup.kotlinpoet.metadata.specs.FieldData.component2', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-field-data/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Collection<AnnotationSpec>', 'description':'com.squareup.kotlinpoet.metadata.specs.FileData.component2', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-file-data/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): Map<Int, Collection<AnnotationSpec>>', 'description':'com.squareup.kotlinpoet.metadata.specs.MethodData.component2', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-method-data/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component2(): FieldData?', 'description':'com.squareup.kotlinpoet.metadata.specs.PropertyData.component2', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-property-data/component2.html', 'searchKey':'component2'},
{'name': 'operator fun component3(): Collection<AnnotationSpec>', 'description':'com.squareup.kotlinpoet.metadata.specs.ClassData.component3', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-class-data/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): Boolean', 'description':'com.squareup.kotlinpoet.metadata.specs.ConstructorData.component3', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-constructor-data/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): Set<JvmFieldModifier>', 'description':'com.squareup.kotlinpoet.metadata.specs.FieldData.component3', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-field-data/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): Map<ImmutableKmProperty, PropertyData>', 'description':'com.squareup.kotlinpoet.metadata.specs.FileData.component3', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-file-data/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): Boolean', 'description':'com.squareup.kotlinpoet.metadata.specs.MethodData.component3', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-method-data/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component3(): MethodData?', 'description':'com.squareup.kotlinpoet.metadata.specs.PropertyData.component3', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-property-data/component3.html', 'searchKey':'component3'},
{'name': 'operator fun component4(): Map<ImmutableKmProperty, PropertyData>', 'description':'com.squareup.kotlinpoet.metadata.specs.ClassData.component4', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-class-data/component4.html', 'searchKey':'component4'},
{'name': 'operator fun component4(): Set<JvmMethodModifier>', 'description':'com.squareup.kotlinpoet.metadata.specs.ConstructorData.component4', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-constructor-data/component4.html', 'searchKey':'component4'},
{'name': 'operator fun component4(): CodeBlock?', 'description':'com.squareup.kotlinpoet.metadata.specs.FieldData.component4', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-field-data/component4.html', 'searchKey':'component4'},
{'name': 'operator fun component4(): Map<ImmutableKmFunction, MethodData>', 'description':'com.squareup.kotlinpoet.metadata.specs.FileData.component4', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-file-data/component4.html', 'searchKey':'component4'},
{'name': 'operator fun component4(): Set<JvmMethodModifier>', 'description':'com.squareup.kotlinpoet.metadata.specs.MethodData.component4', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-method-data/component4.html', 'searchKey':'component4'},
{'name': 'operator fun component4(): MethodData?', 'description':'com.squareup.kotlinpoet.metadata.specs.PropertyData.component4', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-property-data/component4.html', 'searchKey':'component4'},
{'name': 'operator fun component5(): Map<ImmutableKmConstructor, ConstructorData>', 'description':'com.squareup.kotlinpoet.metadata.specs.ClassData.component5', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-class-data/component5.html', 'searchKey':'component5'},
{'name': 'operator fun component5(): List<TypeName>', 'description':'com.squareup.kotlinpoet.metadata.specs.ConstructorData.component5', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-constructor-data/component5.html', 'searchKey':'component5'},
{'name': 'operator fun component5(): ClassName', 'description':'com.squareup.kotlinpoet.metadata.specs.FileData.component5', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-file-data/component5.html', 'searchKey':'component5'},
{'name': 'operator fun component5(): Boolean', 'description':'com.squareup.kotlinpoet.metadata.specs.MethodData.component5', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-method-data/component5.html', 'searchKey':'component5'},
{'name': 'operator fun component5(): Boolean', 'description':'com.squareup.kotlinpoet.metadata.specs.PropertyData.component5', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-property-data/component5.html', 'searchKey':'component5'},
{'name': 'operator fun component6(): Map<ImmutableKmFunction, MethodData>', 'description':'com.squareup.kotlinpoet.metadata.specs.ClassData.component6', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-class-data/component6.html', 'searchKey':'component6'},
{'name': 'operator fun component6(): String?', 'description':'com.squareup.kotlinpoet.metadata.specs.FileData.component6', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-file-data/component6.html', 'searchKey':'component6'},
{'name': 'operator fun component6(): List<TypeName>', 'description':'com.squareup.kotlinpoet.metadata.specs.MethodData.component6', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-method-data/component6.html', 'searchKey':'component6'},
{'name': 'fun copy(declarationContainer: ImmutableKmClass, className: ClassName, annotations: Collection<AnnotationSpec>, properties: Map<ImmutableKmProperty, PropertyData>, constructors: Map<ImmutableKmConstructor, ConstructorData>, methods: Map<ImmutableKmFunction, MethodData>): ClassData', 'description':'com.squareup.kotlinpoet.metadata.specs.ClassData.copy', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-class-data/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(annotations: List<AnnotationSpec>, parameterAnnotations: Map<Int, Collection<AnnotationSpec>>, isSynthetic: Boolean, jvmModifiers: Set<JvmMethodModifier>, exceptions: List<TypeName>): ConstructorData', 'description':'com.squareup.kotlinpoet.metadata.specs.ConstructorData.copy', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-constructor-data/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(declarationContainer: ImmutableKmClass?, annotations: Collection<AnnotationSpec>): EnumEntryData', 'description':'com.squareup.kotlinpoet.metadata.specs.EnumEntryData.copy', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-enum-entry-data/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(annotations: List<AnnotationSpec>, isSynthetic: Boolean, jvmModifiers: Set<JvmFieldModifier>, constant: CodeBlock?): FieldData', 'description':'com.squareup.kotlinpoet.metadata.specs.FieldData.copy', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-field-data/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(declarationContainer: ImmutableKmPackage, annotations: Collection<AnnotationSpec>, properties: Map<ImmutableKmProperty, PropertyData>, methods: Map<ImmutableKmFunction, MethodData>, className: ClassName, jvmName: String?): FileData', 'description':'com.squareup.kotlinpoet.metadata.specs.FileData.copy', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-file-data/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(annotations: List<AnnotationSpec>, parameterAnnotations: Map<Int, Collection<AnnotationSpec>>, isSynthetic: Boolean, jvmModifiers: Set<JvmMethodModifier>, isOverride: Boolean, exceptions: List<TypeName>): MethodData', 'description':'com.squareup.kotlinpoet.metadata.specs.MethodData.copy', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-method-data/copy.html', 'searchKey':'copy'},
{'name': 'fun copy(annotations: List<AnnotationSpec>, fieldData: FieldData?, getterData: MethodData?, setterData: MethodData?, isJvmField: Boolean): PropertyData', 'description':'com.squareup.kotlinpoet.metadata.specs.PropertyData.copy', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-property-data/copy.html', 'searchKey':'copy'},
{'name': 'interface ClassInspector', 'description':'com.squareup.kotlinpoet.metadata.specs.ClassInspector', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-class-inspector/index.html', 'searchKey':'ClassInspector'},
{'name': 'abstract fun containerData(declarationContainer: ImmutableKmDeclarationContainer, className: ClassName, parentClassName: ClassName?): ContainerData', 'description':'com.squareup.kotlinpoet.metadata.specs.ClassInspector.containerData', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-class-inspector/container-data.html', 'searchKey':'containerData'},
{'name': 'fun ClassInspector.containerData(className: ClassName, parentClassName: ClassName?): ContainerData', 'description':'com.squareup.kotlinpoet.metadata.specs.containerData', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/container-data.html', 'searchKey':'containerData'},
{'name': 'abstract fun declarationContainerFor(className: ClassName): ImmutableKmDeclarationContainer', 'description':'com.squareup.kotlinpoet.metadata.specs.ClassInspector.declarationContainerFor', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-class-inspector/declaration-container-for.html', 'searchKey':'declarationContainerFor'},
{'name': 'abstract fun enumEntry(enumClassName: ClassName, memberName: String): EnumEntryData', 'description':'com.squareup.kotlinpoet.metadata.specs.ClassInspector.enumEntry', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-class-inspector/enum-entry.html', 'searchKey':'enumEntry'},
{'name': 'abstract fun isInterface(className: ClassName): Boolean', 'description':'com.squareup.kotlinpoet.metadata.specs.ClassInspector.isInterface', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-class-inspector/is-interface.html', 'searchKey':'isInterface'},
{'name': 'abstract fun methodExists(className: ClassName, methodSignature: JvmMethodSignature): Boolean', 'description':'com.squareup.kotlinpoet.metadata.specs.ClassInspector.methodExists', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-class-inspector/method-exists.html', 'searchKey':'methodExists'},
{'name': 'data class ConstructorData(annotations: List<AnnotationSpec>, parameterAnnotations: Map<Int, Collection<AnnotationSpec>>, isSynthetic: Boolean, jvmModifiers: Set<JvmMethodModifier>, exceptions: List<TypeName>)', 'description':'com.squareup.kotlinpoet.metadata.specs.ConstructorData', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-constructor-data/index.html', 'searchKey':'ConstructorData'},
{'name': 'fun ConstructorData(annotations: List<AnnotationSpec>, parameterAnnotations: Map<Int, Collection<AnnotationSpec>>, isSynthetic: Boolean, jvmModifiers: Set<JvmMethodModifier>, exceptions: List<TypeName>)', 'description':'com.squareup.kotlinpoet.metadata.specs.ConstructorData.ConstructorData', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-constructor-data/-constructor-data.html', 'searchKey':'ConstructorData'},
{'name': 'object Companion', 'description':'com.squareup.kotlinpoet.metadata.specs.ConstructorData.Companion', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-constructor-data/-companion/index.html', 'searchKey':'Companion'},
{'name': 'object Companion', 'description':'com.squareup.kotlinpoet.metadata.specs.FieldData.Companion', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-field-data/-companion/index.html', 'searchKey':'Companion'},
{'name': 'object Companion', 'description':'com.squareup.kotlinpoet.metadata.specs.MethodData.Companion', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-method-data/-companion/index.html', 'searchKey':'Companion'},
{'name': 'interface ContainerData', 'description':'com.squareup.kotlinpoet.metadata.specs.ContainerData', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-container-data/index.html', 'searchKey':'ContainerData'},
{'name': 'data class EnumEntryData(declarationContainer: ImmutableKmClass?, annotations: Collection<AnnotationSpec>)', 'description':'com.squareup.kotlinpoet.metadata.specs.EnumEntryData', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-enum-entry-data/index.html', 'searchKey':'EnumEntryData'},
{'name': 'fun EnumEntryData(declarationContainer: ImmutableKmClass?, annotations: Collection<AnnotationSpec>)', 'description':'com.squareup.kotlinpoet.metadata.specs.EnumEntryData.EnumEntryData', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-enum-entry-data/-enum-entry-data.html', 'searchKey':'EnumEntryData'},
{'name': 'data class FieldData(annotations: List<AnnotationSpec>, isSynthetic: Boolean, jvmModifiers: Set<JvmFieldModifier>, constant: CodeBlock?)', 'description':'com.squareup.kotlinpoet.metadata.specs.FieldData', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-field-data/index.html', 'searchKey':'FieldData'},
{'name': 'fun FieldData(annotations: List<AnnotationSpec>, isSynthetic: Boolean, jvmModifiers: Set<JvmFieldModifier>, constant: CodeBlock?)', 'description':'com.squareup.kotlinpoet.metadata.specs.FieldData.FieldData', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-field-data/-field-data.html', 'searchKey':'FieldData'},
{'name': 'data class FileData(declarationContainer: ImmutableKmPackage, annotations: Collection<AnnotationSpec>, properties: Map<ImmutableKmProperty, PropertyData>, methods: Map<ImmutableKmFunction, MethodData>, className: ClassName, jvmName: String?) : ContainerData', 'description':'com.squareup.kotlinpoet.metadata.specs.FileData', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-file-data/index.html', 'searchKey':'FileData'},
{'name': 'fun FileData(declarationContainer: ImmutableKmPackage, annotations: Collection<AnnotationSpec>, properties: Map<ImmutableKmProperty, PropertyData>, methods: Map<ImmutableKmFunction, MethodData>, className: ClassName, jvmName: String?)', 'description':'com.squareup.kotlinpoet.metadata.specs.FileData.FileData', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-file-data/-file-data.html', 'searchKey':'FileData'},
{'name': 'enum JvmFieldModifier : Enum<JvmFieldModifier> , JvmModifier', 'description':'com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-jvm-field-modifier/index.html', 'searchKey':'JvmFieldModifier'},
{'name': 'STATIC()', 'description':'com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.STATIC', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-jvm-field-modifier/-s-t-a-t-i-c/index.html', 'searchKey':'STATIC'},
{'name': 'STATIC()', 'description':'com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.STATIC', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-jvm-method-modifier/-s-t-a-t-i-c/index.html', 'searchKey':'STATIC'},
{'name': 'open override fun annotationSpec(): AnnotationSpec', 'description':'com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.STATIC.annotationSpec', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-jvm-field-modifier/-s-t-a-t-i-c/annotation-spec.html', 'searchKey':'annotationSpec'},
{'name': 'open override fun annotationSpec(): AnnotationSpec', 'description':'com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.TRANSIENT.annotationSpec', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-jvm-field-modifier/-t-r-a-n-s-i-e-n-t/annotation-spec.html', 'searchKey':'annotationSpec'},
{'name': 'open override fun annotationSpec(): AnnotationSpec', 'description':'com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.VOLATILE.annotationSpec', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-jvm-field-modifier/-v-o-l-a-t-i-l-e/annotation-spec.html', 'searchKey':'annotationSpec'},
{'name': 'open override fun annotationSpec(): AnnotationSpec', 'description':'com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.STATIC.annotationSpec', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-jvm-method-modifier/-s-t-a-t-i-c/annotation-spec.html', 'searchKey':'annotationSpec'},
{'name': 'open override fun annotationSpec(): AnnotationSpec', 'description':'com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.SYNCHRONIZED.annotationSpec', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-jvm-method-modifier/-s-y-n-c-h-r-o-n-i-z-e-d/annotation-spec.html', 'searchKey':'annotationSpec'},
{'name': 'abstract fun annotationSpec(): AnnotationSpec', 'description':'com.squareup.kotlinpoet.metadata.specs.JvmModifier.annotationSpec', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-jvm-modifier/annotation-spec.html', 'searchKey':'annotationSpec'},
{'name': 'TRANSIENT()', 'description':'com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.TRANSIENT', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-jvm-field-modifier/-t-r-a-n-s-i-e-n-t/index.html', 'searchKey':'TRANSIENT'},
{'name': 'VOLATILE()', 'description':'com.squareup.kotlinpoet.metadata.specs.JvmFieldModifier.VOLATILE', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-jvm-field-modifier/-v-o-l-a-t-i-l-e/index.html', 'searchKey':'VOLATILE'},
{'name': 'enum JvmMethodModifier : Enum<JvmMethodModifier> , JvmModifier', 'description':'com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-jvm-method-modifier/index.html', 'searchKey':'JvmMethodModifier'},
{'name': 'SYNCHRONIZED()', 'description':'com.squareup.kotlinpoet.metadata.specs.JvmMethodModifier.SYNCHRONIZED', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-jvm-method-modifier/-s-y-n-c-h-r-o-n-i-z-e-d/index.html', 'searchKey':'SYNCHRONIZED'},
{'name': 'interface JvmModifier', 'description':'com.squareup.kotlinpoet.metadata.specs.JvmModifier', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-jvm-modifier/index.html', 'searchKey':'JvmModifier'},
{'name': 'data class MethodData(annotations: List<AnnotationSpec>, parameterAnnotations: Map<Int, Collection<AnnotationSpec>>, isSynthetic: Boolean, jvmModifiers: Set<JvmMethodModifier>, isOverride: Boolean, exceptions: List<TypeName>)', 'description':'com.squareup.kotlinpoet.metadata.specs.MethodData', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-method-data/index.html', 'searchKey':'MethodData'},
{'name': 'fun MethodData(annotations: List<AnnotationSpec>, parameterAnnotations: Map<Int, Collection<AnnotationSpec>>, isSynthetic: Boolean, jvmModifiers: Set<JvmMethodModifier>, isOverride: Boolean, exceptions: List<TypeName>)', 'description':'com.squareup.kotlinpoet.metadata.specs.MethodData.MethodData', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-method-data/-method-data.html', 'searchKey':'MethodData'},
{'name': 'fun allAnnotations(useSiteTarget: AnnotationSpec.UseSiteTarget?, containsReifiedTypeParameter: Boolean): Collection<AnnotationSpec>', 'description':'com.squareup.kotlinpoet.metadata.specs.MethodData.allAnnotations', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-method-data/all-annotations.html', 'searchKey':'allAnnotations'},
{'name': 'data class PropertyData(annotations: List<AnnotationSpec>, fieldData: FieldData?, getterData: MethodData?, setterData: MethodData?, isJvmField: Boolean)', 'description':'com.squareup.kotlinpoet.metadata.specs.PropertyData', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-property-data/index.html', 'searchKey':'PropertyData'},
{'name': 'fun PropertyData(annotations: List<AnnotationSpec>, fieldData: FieldData?, getterData: MethodData?, setterData: MethodData?, isJvmField: Boolean)', 'description':'com.squareup.kotlinpoet.metadata.specs.PropertyData.PropertyData', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-property-data/-property-data.html', 'searchKey':'PropertyData'},
{'name': 'class TypeNameAliasTag(type: TypeName)', 'description':'com.squareup.kotlinpoet.metadata.specs.TypeNameAliasTag', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-type-name-alias-tag/index.html', 'searchKey':'TypeNameAliasTag'},
{'name': 'fun TypeNameAliasTag(type: TypeName)', 'description':'com.squareup.kotlinpoet.metadata.specs.TypeNameAliasTag.TypeNameAliasTag', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/-type-name-alias-tag/-type-name-alias-tag.html', 'searchKey':'TypeNameAliasTag'},
{'name': 'fun ClassInspector.classFor(className: ClassName): ImmutableKmClass', 'description':'com.squareup.kotlinpoet.metadata.specs.classFor', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs/class-for.html', 'searchKey':'classFor'},
{'name': 'object ClassInspectorUtil', 'description':'com.squareup.kotlinpoet.metadata.specs.internal.ClassInspectorUtil', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs.internal/-class-inspector-util/index.html', 'searchKey':'ClassInspectorUtil'},
{'name': 'fun codeLiteralOf(literal: Any): CodeBlock', 'description':'com.squareup.kotlinpoet.metadata.specs.internal.ClassInspectorUtil.codeLiteralOf', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs.internal/-class-inspector-util/code-literal-of.html', 'searchKey':'codeLiteralOf'},
{'name': 'fun computeIsJvmField(property: ImmutableKmProperty, classInspector: ClassInspector, isCompanionObject: Boolean, hasGetter: Boolean, hasSetter: Boolean, hasField: Boolean): Boolean', 'description':'com.squareup.kotlinpoet.metadata.specs.internal.ClassInspectorUtil.computeIsJvmField', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs.internal/-class-inspector-util/compute-is-jvm-field.html', 'searchKey':'computeIsJvmField'},
{'name': 'fun createAnnotations(siteTarget: AnnotationSpec.UseSiteTarget?, body: MutableCollection<AnnotationSpec>.() -> Unit): Collection<AnnotationSpec>', 'description':'com.squareup.kotlinpoet.metadata.specs.internal.ClassInspectorUtil.createAnnotations', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs.internal/-class-inspector-util/create-annotations.html', 'searchKey':'createAnnotations'},
{'name': 'fun createClassName(kotlinMetadataName: String): ClassName', 'description':'com.squareup.kotlinpoet.metadata.specs.internal.ClassInspectorUtil.createClassName', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs.internal/-class-inspector-util/create-class-name.html', 'searchKey':'createClassName'},
{'name': 'fun createThrowsSpec(exceptions: Collection<TypeName>, useSiteTarget: AnnotationSpec.UseSiteTarget?): AnnotationSpec', 'description':'com.squareup.kotlinpoet.metadata.specs.internal.ClassInspectorUtil.createThrowsSpec', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs.internal/-class-inspector-util/create-throws-spec.html', 'searchKey':'createThrowsSpec'},
{'name': 'fun filterOutNullabilityAnnotations(annotations: List<AnnotationSpec>): List<AnnotationSpec>', 'description':'com.squareup.kotlinpoet.metadata.specs.internal.ClassInspectorUtil.filterOutNullabilityAnnotations', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs.internal/-class-inspector-util/filter-out-nullability-annotations.html', 'searchKey':'filterOutNullabilityAnnotations'},
{'name': 'fun Iterable<AnnotationSpec>.toTreeSet(): TreeSet<AnnotationSpec>', 'description':'com.squareup.kotlinpoet.metadata.specs.internal.ClassInspectorUtil.toTreeSet', 'location':'kotlinpoet-metadata-specs/com.squareup.kotlinpoet.metadata.specs.internal/-class-inspector-util/to-tree-set.html', 'searchKey':'toTreeSet'}]
